First, server registers on UDP masterserver by sending lx::queryreturn packet each 40 seconds. No de-registering is made yet, masterserver will remove entry in 2 minutes.
Then client gets data from UDP masterserver (I've named packets lx::getserverlist and lx::serverlist)
If client cannot ping the host from UDP masterserver list it considers that HOS behind NAT.
When connecting to it client sends lx::traverse to UDP masterserver and waits for an answer from the same socket/port.
When received lx::traverse masterserver will put there original source address and re-sends it to destination host.
When host receives lx::traverse it opens another UDP socket (actually it's already open, just not used) and sends lx::traverse from this new socket to masterserver, then sends 3 lx::pong packets to the client external IP:port specified in first lx::traverse, thus opening it's NAT to client.
When masterserver receives lx::traverse from host it re-sends it to client.
Client will receive external host IP:port and will try to connect there.
