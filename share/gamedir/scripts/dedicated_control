#!/usr/bin/python -u
# Dedicated Control handler script for OpenLieroX
# (http://openlierox.sourceforge.net)
# Upon editing - keep good names and excessive comments
# Written for easy editing by newcomers to python or programming in general
# OH AND I MEAN THIS ABOUT EXCESSIVE COMMENTS T.T
# As usual, try to hardcode as little as possible, it becomes magical numbers for everyone except you(!!)
# TODO: Why don't we import dedicated_control_functions as this namespace? I don't get the point of current implementation.

import os, sys, time # Useful imports
sys.path.append(os.getcwd()+"/cfg") # Append cfg dir to Python imports search paths
sys.path.append(os.getcwd()+"/scripts") # Append current dir to Python imports search paths

import dedicated_config  # Per-host config like admin password 
import dedicated_control_functions # Low-level stuff
cfg = dedicated_config # shortcut
ded = dedicated_control_functions # shortcut

## Global vars ##

## The game loop ##

ded.msg("GameState = %s" % str(ded.gameState))
ded.messageLog("Dedicated_control started",ded.LOG_INFO)

ded.startLobby(cfg.LOCAL_BOT_NAME)

ded.initPresets()

ded.waitLobbyStarted()

ded.setvar("GameServer.ServerName", cfg.SERVER_NAME)

ded.setvar("GameServer.GameInfo.sWelcomeMessage", cfg.WELCOME_MESSAGE)
ded.setvar("GameServer.MaxPlayers", cfg.MAX_PLAYERS)

ded.setvar("GameServer.GameInfo.iGameMode", "0") # 0 - DM, 1 - Team DM
ded.setvar("GameServer.GameInfo.iLives", cfg.GAME_LIVES)
ded.setvar("GameServer.GameInfo.iKillLimit", cfg.GAME_MAX_KILLS)
ded.setvar("GameServer.GameInfo.fTimeLimit", cfg.GAME_MAX_TIME)
ded.setvar("GameOptions.Advanced.WeaponSelectionMaxTime", cfg.WEAPON_SELECTION_TIME)

ded.selectNextPreset()

lobbyChangePresetTimeout = cfg.WAIT_BEFORE_GAME*10
lobbyWaitBeforeGame = cfg.WAIT_BEFORE_GAME
lobbyWaitAfterGame = 0
lobbyWaitGeneral = cfg.WAIT_BEFORE_SPAMMING_TOO_FEW_PLAYERS_MESSAGE
lobbyEnoughPlayers = False

# nice state-machine for dedicated server
while ded.gameState != ded.GAME_QUIT:

	time.sleep(1)
	
	oldState = ded.gameState
	# TODO: ATM we get max 1 signal/second. This can lead to huge delays... and a logfile full of junk.
	#Perhaps outsource this, to read all availible signals (but perhaps with FPS limit?) before continuing on to the next rows?
	ded.signalHandler(ded.getSignal())

	if ded.gameState == ded.GAME_LOBBY:
		
		lobbyChangePresetTimeout -= 1
		
		if oldState != ded.GAME_LOBBY or lobbyChangePresetTimeout <= 0:
			lobbyChangePresetTimeout = cfg.PRESET_TIMEOUT
			ded.selectNextPreset()
			lobbyEnoughPlayers = False # reset the state
			lobbyWaitGeneral = cfg.WAIT_BEFORE_SPAMMING_TOO_FEW_PLAYERS_MESSAGE
			lobbyWaitAfterGame = 0
			if oldState == ded.GAME_PLAYING:
				lobbyWaitAfterGame = cfg.WAIT_AFTER_GAME
		
		lobbyWaitAfterGame -= 1
		
		if lobbyWaitAfterGame <= 0:
		
			lobbyWaitGeneral -= 1
			
			if not lobbyEnoughPlayers and lobbyWaitGeneral <= 0:
				lobbyWaitGeneral = cfg.WAIT_BEFORE_SPAMMING_TOO_FEW_PLAYERS_MESSAGE
				ded.chatMsg(cfg.TOO_FEW_PLAYERS_MESSAGE)
			
			if not lobbyEnoughPlayers and len(ded.worms) >= cfg.MIN_PLAYERS: # Enough players already - start game
				lobbyEnoughPlayers = True
				ded.chatMsg(cfg.WAIT_BEFORE_GAME_MESSAGE)
				lobbyWaitBeforeGame = cfg.WAIT_BEFORE_GAME
			
			if lobbyEnoughPlayers and len(ded.worms) < cfg.MIN_PLAYERS: # Some players left when game not yet started
				lobbyEnoughPlayers = False
				ded.chatMsg(cfg.TOO_FEW_PLAYERS_MESSAGE)
			
			if lobbyEnoughPlayers:
				lobbyWaitBeforeGame -= 1
				if lobbyWaitBeforeGame <= 0: # Start the game
					
					if len(ded.worms) >= cfg.MIN_PLAYERS_TEAMS: # Split in teams
						ded.setvar("GameServer.GameInfo.iGameMode", "1")
						ded.sendLobbyUpdate() # Update game mode info
						counter = 0
						for w in ded.worms.keys():
							if w.iID != -1:
								ded.setWormTeam( w, counter % 2 )
								counter += 1
					else:
						ded.setvar("GameServer.GameInfo.iGameMode", "0")
						ded.sendLobbyUpdate() # Update game mode info
					
					ded.startGame()
					# TODO: Why is this here too, and up above?
					#lobbyWaitAfterGame = cfg.WAIT_AFTER_GAME # Give our server 20 seconds to load up map
					#lobbyChangePresetTimeout = cfg.PRESET_TIMEOUT
	
	if ded.gameState == ded.GAME_WEAPONS:
		
		if len(ded.worms) < cfg.MIN_PLAYERS: # Some players left when game not yet started
			ded.gotoLobby()
	
	if ded.gameState == ded.GAME_PLAYING:
		
		if oldState != ded.GAME_PLAYING and cfg.KILL_LOCAL_BOT:
			ded.killBots()

ded.messageLog("GameState is QUIT. Exiting.",LOG_INFO)
sys.exit() # Kill the stdin-input thread
