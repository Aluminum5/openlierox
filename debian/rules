#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# configure the package.
	if [ \! -e bin ] ; then mkdir bin ; fi

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# compile the package.
	#$(MAKE) -j2
	HAWKNL_BUILTIN=1 DEBUG=0 SYSTEM_DATA_DIR=/usr/share/games CXXFLAGS="$(CFLAGS)" ./compile.sh
	#docbook-to-man debian/openlierox.sgml > openlierox.1

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# clean up after the build process.
	#$(MAKE) clean #not needed? is called in pbuilder before CMake
	# we have nothing to cleanup as compile.sh doesn't generate any temp files
	# though here some cleanups for unclean orig.sources
	find . \( -name 'Thumbs.db' \
			-o -name '*.h.old' \
			-o -name '*.cpp.old' \
			\) -exec rm -f {} \;
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# install the package into debian/openlierox.
	PREFIX=$(CURDIR)/debian/openlierox BIN_DIR=usr/games SYSTEM_DATA_DIR=/usr/share/games ./install.sh
	cp share/OpenLieroX.xpm $(CURDIR)/debian/openlierox/usr/share/pixmaps/OpenLieroX.xpm
	cp share/OpenLieroX.svg $(CURDIR)/debian/openlierox/usr/share/pixmaps/OpenLieroX.svg
	cp share/openlierox-openlierox.desktop $(CURDIR)/debian/openlierox/usr/share/applications/
	cp debian/copyright $(CURDIR)/debian/openlierox/usr/share/doc/openlierox/copyright
	gzip -9 -c doc/openlierox.6 > $(CURDIR)/debian/openlierox/usr/share/man/man6/openlierox.6.gz

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs # doc/ChangeLog is intalled by installer, this makes the DEB changelog
#	dh_installdocs # already done by installer
#	dh_installexamples
#	dh_install
	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
